umask 002
cdpath=(~)

setopt AUTOPUSHD
setopt PUSHD_IGNORE_DUPS
setopt AUTO_CD
setopt CDABLEVARS

# env
export SVN_EDITOR=vi
export PATH=~/bin:/usr/local/bin:/sbin:/usr/sbin::$PATH

# bindkey
bindkey -v
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward
bindkey '^R' history-incremental-search-backward

function cdup() {
  echo
  cd ..
  zle push-line-or-edit
  zle accept-line
}
zle -N cdup
bindkey '^U' cdup

# prompt
function _prompt_compute_vars() {
    local short
    short="${PWD/$HOME/~}"

    right_line_size=$((${COLUMNS} - ${#short} - 4))
    if test $right_line_size -lt 0 ; then 
        right_line_size=$((${right_line_size} + ${COLUMNS}))
    fi
    right_line=${(l.${right_line_size}..-.)}

    export __ZSH_RPROMPT_DIR_RIGHT_LINE="$right_line"
    export __ZSH_RPROMPT_DIR="$short"
}

setopt prompt_subst

autoload -U colors
colors

_prompt_compute_vars

PROMPT='%{$fg[magenta]%}-<%{$fg[yellow]%}${__ZSH_RPROMPT_DIR}%{$fg[magenta]%}>-${__ZSH_RPROMPT_DIR_RIGHT_LINE}%{$reset_color%}
%{$fg[green]%}%#%{$reset_color%} '

RPROMPT='${WINDOW:+"[$WINDOW]"}%{$fg[green]%}${USER}%{$fg[blue]%}@%{$fg[red]%}`hostname -s`%{$fg[yellow]%}[%{$fg[red]%}%!%{$fg[yellow]%}]%{$reset_color%}'

# complete
#_cache_hosts=()
autoload -U compinit
compinit -u

autoload predict-on
zle -N predict-on
zle -N predict-off
bindkey '^X^Z' predict-on
bindkey '^Z' predict-off
zstyle ':predict' verbose true

export LS_COLORS='no=00:fi=00:di=01;36:ln=01;34:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jpg=01;35:*.png=01;35:*.gif=01;35:*.bmp=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.png=01;35:*.mpg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:'

zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:cd:*' tag-order local-directories path-directories
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*:default' menu select=1

function  _cap () {
  `cap -T | grep '^cap ' | sed 's/^cap //' | sed 's/ .*//' | sed 's/^/compadd /'`
}
compdef _cap cap

# history
HISTFILE=$HOME/.zsh-history
HISTSIZE=100000
SAVEHIST=100000

setopt EXTENDED_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_NO_STORE
setopt LIST_PACKED
setopt PRINT_EIGHT_BIT

# screen
function _set_screen_tabline() {
    if test "$TERM" != "screen"; then
        return
    fi

    emulate -L zsh
    local -a cmd; cmd=(${(z)2})
    case $cmd[1] in
        fg)
            if (($#cmd == 1)); then
                cmd=(builtin jobs -l %+)
            else
                cmd=(builtin jobs -l $cmd[2])
            fi
            ;;
        %*) 
            cmd=(builtin jobs -l $cmd[1])
            ;;
        (gnu|)ls|gvim(.sh|))
            return
            ;; 
        cd)
            if (($#cmd == 2)); then
                cmd[1]=$cmd[2]:t
            else
                cmd[1]="~"
            fi
            _change_hardstatus $cmd[1]
            return
            ;;
        vi(m|))
            if (($#cmd == 2)); then
                cmd[1]="v:$cmd[2]:t"
            fi
            _change_hardstatus $cmd[1]
            return
            ;;
        *)
            _change_hardstatus $cmd[1]:t
            return
            ;;
    esac

    local -A jt; jt=(${(kv)jobtexts})

    $cmd >>(
        read num rest
        cmd=(${(z)${(e):-\$jt$num}})
        echo -n "k$cmd[1]:t\\"
    ) 2>/dev/null
}

function _change_hardstatus() {
    echo -n "k$1\\"
}

# alias
alias -g lG='| grep'
alias -g lM='| more'
alias -g lX='| xargs'

alias sc='screen -xR'

if test `uname` != 'Linux' ; then
    alias vi='vim'
fi

alias l='ls'
alias la='ls -A'
alias ll='ls -lA'
alias lt='ll -ct'

function tr() {
  ls -R $1 | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//- /g' -e 's/^/ /' -e 's/-/|/'
}

alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

alias h='history'
alias ha='h -E 1'
alias du='du -h'
alias df='df -h'
alias j='jobs'

alias ack='ack --color'

if test `uname` = 'FreeBSD' ; then
    alias ls='gnuls -F --color=auto'

    function _color_ls() {
        gnuls -F --color=auto -A;
    }
else
    alias ls='ls -F --color=auto'

    function _color_ls() {
        ls -F --color=auto -A;
    }
fi

# etc
function chpwd () {
    _prompt_compute_vars
    _color_ls
}

function preexec () {
    _set_screen_tabline $1 $2
}

